import { clsx, type ClassValue } from "clsx"
import { Contract, ContractTransaction, JsonRpcProvider } from "ethers"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

export async function getRawTransactionToSign(
  fuction: string,
  params: any[]
): Promise<ContractTransaction> {
  const provider = new JsonRpcProvider(process.env.NEXT_PUBLIC_RPC_URL!)
  const urlContract = new Contract(
    process.env.NEXT_PUBLIC_CONTRACT_ADDRESS!,
    '[{"inputs":[{"internalType":"string","name":"firstTag","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"createTagIfNotExists","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllTags","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"createdBy","type":"address"},{"internalType":"uint256[]","name":"urlIds","type":"uint256[]"}],"internalType":"struct UrlContract.Tag[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllURLs","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"url","type":"string"},{"internalType":"address","name":"submittedBy","type":"address"},{"internalType":"uint256","name":"likes","type":"uint256"},{"internalType":"uint256[]","name":"tagIds","type":"uint256[]"}],"internalType":"struct UrlContract.URL[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getTag","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"createdBy","type":"address"},{"internalType":"uint256[]","name":"urlIds","type":"uint256[]"}],"internalType":"struct UrlContract.Tag","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getURL","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"url","type":"string"},{"internalType":"address","name":"submittedBy","type":"address"},{"internalType":"uint256","name":"likes","type":"uint256"},{"internalType":"uint256[]","name":"tagIds","type":"uint256[]"}],"internalType":"struct UrlContract.URL","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"getURLsByTag","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"url","type":"string"},{"internalType":"address","name":"submittedBy","type":"address"},{"internalType":"uint256","name":"likes","type":"uint256"},{"internalType":"uint256[]","name":"tagIds","type":"uint256[]"}],"internalType":"struct UrlContract.URL[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getURLsByUser","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"url","type":"string"},{"internalType":"address","name":"submittedBy","type":"address"},{"internalType":"uint256","name":"likes","type":"uint256"},{"internalType":"uint256[]","name":"tagIds","type":"uint256[]"}],"internalType":"struct UrlContract.URL[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserLikedURLs","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"url","type":"string"},{"internalType":"address","name":"submittedBy","type":"address"},{"internalType":"uint256","name":"likes","type":"uint256"},{"internalType":"uint256[]","name":"tagIds","type":"uint256[]"}],"internalType":"struct UrlContract.URL[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserSubmittedURLs","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"url","type":"string"},{"internalType":"address","name":"submittedBy","type":"address"},{"internalType":"uint256","name":"likes","type":"uint256"},{"internalType":"uint256[]","name":"tagIds","type":"uint256[]"}],"internalType":"struct UrlContract.URL[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"likeURL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"url","type":"string"},{"internalType":"string[]","name":"_tags","type":"string[]"}],"name":"submitURL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"unlikeURL","outputs":[],"stateMutability":"nonpayable","type":"function"}]',
    provider
  )
  const metaTransaction = await urlContract[fuction].populateTransaction(
    ...params
  )
  return metaTransaction
}
